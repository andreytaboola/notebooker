[metadata]
name = notebooker
author = Man Quant Technology
author_email = ManAlphaTech@man.com
description = Tool for parametrizing, executing, and displaying Jupyter Notebooks as reports.
long_description_content_type = text/markdown
license = AGPLv3
url = https://github.com/man-group/notebooker
classifiers =
    Development Status :: 5 - Production/Stable
    License :: OSI Approved :: GNU Affero General Public License v3
    Framework :: Flask
    Framework :: IPython
    Framework :: Jupyter
    Programming Language :: Python :: 3.6
    Operating System :: POSIX
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows :: Windows 10
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: WWW/HTTP :: WSGI :: Application
    Topic :: Software Development :: Libraries

[options]
packages=find:
namespace_packages = notebooker
python_requires = ">=3.5"
zip_safe = False
include_package_data = True
setup_requires =
    six
    numpy
install_requires =
    requests
    importlib-metadata; python_version<"3.8"
    apscheduler
    babel
    cachelib
    click>7.1.0
    dataclasses; python_version < "3.8"
    flask
    gevent
    gitpython
    inflection
    ipykernel
    ipython
    ipython_genutils
    jupytext>=1.2.0
    matplotlib
    nbconvert
    nbformat
    pandas
    papermill
    pymongo
    python-dateutil
    requests
    retrying
    stashy
    Werkzeug<2.2

[options.packages.find]
exclude =
    tests
    tests.*
    benchmarks

[options.extras_require]
prometheus = prometheus_client
docs = docutils<0.18; sphinx<3.0.0; numpydoc; sphinxcontrib-httpdomain; sphinxcontrib-httpdomain; sphinx-click
test = openpyxl; pytest; mock; pytest-cov; pytest-timeout; pytest-xdist; pytest-server-fixtures; freezegun; hypothesis>=3.83.2

[options.entry_points]
console_scripts =
    notebooker-cli = notebooker._entrypoints:base_notebooker
    notebooker_execute = notebooker.execute_notebook:docker_compose_entrypoint
    notebooker_template_sanity_check = notebooker.utils.template_testing:sanity_check
    notebooker_template_regression_test = notebooker.utils.template_testing:regression_test
    convert_ipynb_to_py = notebooker.convert_to_py:main

[flake8]
ignore = F401,E203,W504,W503
max-line-length = 160
exclude = tests/* notebooker/web/static/* notebooker/notebook_templates_example/*

[isort]
line_length=120
multi_line_output=3
known_third_party=jupytext,prometheus_client,pytest,freezegun